Explain at its core what a computer really is doing whenever you type a letter on a keyboard.

When you type a letter on a keyboard. A very complex chain reaction is activated. The moment the computer registers your pressed letter, a quick current of electricity is sent to the hardware. This current of electricity is interpreted as binary signals that are redirected to the software text program that you are using. This software program will look at the hardware pattern of switches that represent the letter you just typed. In the case of the capital letter A for example, the initial current of electricity will be interpreted as binary and further mapped into the ASCII system which is represented by the number 65 in this case. The result is the Capital letter A popping up on your screen almost instantly.

Millions of electric signals are being converted from electricity into binary and further mapped by the complex switches of the software and hardware running on your computer every time you write a simple email.

What is a packet of data?

A packet of data is a piece of information that contains it’s source address and destination address on a header. A good way to think about this is take for example a video file. A video file, depending on its size is made up of many many packets of information. Let’s say for example you are trying to watch a video on YouTube. Your computer acting as the client will request the video from the YouTube servers. This video which is made up of data will be split into a bunch of packets of information via the Transmission Control Protocol (TCP). These packets will travel in the most efficient and reliable way possible in order to reach your computer so you can enjoy your video. When all of the packets that make up your video arrive at their destination the TCP protocol will take inventory of all the packets to ensure that all packets of information arrive complete in order for your video to play without errors. For each missing or incomplete packet sent, the YouTube server will resend them. 

Explain data rate, Throughput and Bandwidth.

Data Rate:
This often refers to how much data can be downloaded or uploaded per second. Through a specific connection such as DSL, WIFi or a cable Modem. Every type of network has its own data rate speed. The rate of course refers to the bits of information that are being transmitted.

Throughput:
Is the actual amount of data passing through a media connection.
This is measured at the Layer 2 Internet layer of the TCP/IP model. The transmission rate is measured against many variables such as transmission overhead, congested traffic or other things like protocol inefficiencies.

Bandwidth:
Bandwidth is speed measured in bits per second. For example (kbps, Mbps, Gbps, etc. Bandwidth also means a range of frequencies used to transmit signals. The width of the frequency that is available is the same as the data rate that can be achieved. 

Explain Datagram Forwarding

The internet is an example of a datagram network and the routers on the internet do not contain a state of end to end connections. In fact at the network level there is no concept of connection. The concept of connection is mainly just logical and it functions mainly at the transport layer as opposed to the Internet layer.. Packets of data get forwarded using the destination host address. This is done by routers on the network that keep a datagram forwarding table of addresses. These forwarding tables contain the destination address and their matching output links. Matching these two is the result of using the longest address prefix that matches the destination address.

Explain Algorithms
I want to first address routing algorithms before I give a general definition of algorithms in the context of programming. Each node has two parts. The routing algorithm and the local forwarding table. The routing algorithm determines the end to end path through the network. Once the path is determined the routing algorithm populates the local forwarding table. Routing algorithms also have two different classifications. One is global and the other is decentralized information. When a routing algorithm requires global information this means that all routers know all of the topologies related to it on the network including the link cost information. When it requires decentralization it only knows the link cost of its physically connected neighbors. Thus it uses an iterative process of computations to exchange information with its neighbors. It collects information in this manner to determine the forwarding method. Lastly there are two more classifications. Static or Dynamic. With static routing algorithms the routes change slowly over time. In contrast Dynamic routing algorithm's routes change quicker via periodic updates in response to link cost changes. 
In the simplest terms an algorithm is just a method to find a solution to a problem. In programming we use Big O notation to optimize the memory space and speed of a given program. With O(n) linear search the solution will take quite a long time in comparison to the other 4. With O(log n) binary search the solution is twice as fast as linear search but still very slow. With I(1) Bubble sort the speed is a bit better, not as fast as O(n2) selection sort which is not too bad. Finally there is O(n log n) merge sort which is the fastest algorithm of all. 

Explain Network Topology
 A Network Topology refers to how devices are connected on a LAN. It belongs to the Physical / Link Layer 1. Topologies can include three categories. Physical, logical and hybrid. A physical topology refers to how network devices are physically connected. This literally means we can actually see the layout of the network. A logical topology refers to how devices are connected with regards to signal flow. It is the way that the signals travel on the network media, or the way the signal passes through the network. From one device to the next without regard to the physical connections. The hybrid topology is the combination of the physical and logical topologies. 
Let's discuss 8 different topologies. The simplest one is P2P(point to point) topology. Where one device is directly connected to another device. Another is the P2MP (point to multipoint topology). This consists of a central base station that supports other subscribed stations. Data transmitted from the central station is broadcasted to all other stations. This is usually used in wireless LAN and WAN. Next up is Bus topology which has no central device. Instead every node is connected to one shared cable. When a signal is passed every node gets a copy of it but only the destination node actually registers it. Terminators are required at both ends to prevent data reflection. Next is ring topology. Similar to the bus topology in that both are connected by one cable but in ring topology this forms a closed loop. Then we have what is called a star topology. All nodes are connected to a central device. A star ring topology and a star bus topology are examples of hybrid topologies. Lastly we have the mesh topology. There are two types of mesh topologies. A fully meshed topology means that every node is connected to every other node. While partially meshed topologies are similar but with fewer connections for the same number of connections. Partially meshed topologies are good for physical networks while fully meshed topologies are good for wireless networks.